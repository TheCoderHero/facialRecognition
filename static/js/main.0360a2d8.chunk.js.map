{"version":3,"sources":["components/logo/CoderHero.png","components/navigation/navigation.js","components/logo/logo.js","components/rank/rank.js","components/imageLinkForm/imagelf.js","components/facerecog/facerecog.js","components/signin/signin.js","components/register/register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","src","coderhero","Rank","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","box","imageURL","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","htmlFor","name","value","Register","app","Clarifai","App","apiKey","particlesOptions","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0360a2d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CoderHero.aae52855.png\";","import React from 'react';\r\n\r\nconst Navigation = ( { onRouteChange, isSignedIn } ) => {\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick = { () => onRouteChange('signout') } className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick = { () => onRouteChange('signin') } className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                <p onClick = { () => onRouteChange('register') } className='f3 link dim black underline pa3 pointer'>Register</p>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './logo.css';\r\nimport coderhero from './CoderHero.png';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner\">\r\n                    <img alt='brain logo' src={coderhero} /> \r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {'Username, your current rank is...'}\r\n            </div>\r\n            <div className='white f1'>\r\n                {'#5'}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './imagelink.css';\r\n\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'The Coder Hero can detect faces in your pictures.'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={ onButtonSubmit } >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './facerecog.css';\r\n\r\nconst FaceRecognition = ({ box, imageURL }) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputImage' alt='' src={imageURL} width='500px' height='auto' />\r\n            <div className='bounding-box' style={ { top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol } }></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst SignIn = ( { onRouteChange } ) => {\r\n    return (\r\n        <article className='br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center'>\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input \r\n                    onClick = { () => onRouteChange('home') } className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                    <p onClick = { () => onRouteChange('register') } className=\"f6 link dim black db pointer\">Register</p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Register = ( { onRouteChange } ) => {\r\n    return (\r\n        <article className='br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center'>\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                    <input \r\n                    onClick = { () => onRouteChange('home') } className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport Navigation from './components/navigation/navigation';\r\nimport Clarifai from 'clarifai';\r\nimport Logo from './components/logo/logo';\r\nimport Rank from './components/rank/rank';\r\nimport ImageLinkForm from './components/imageLinkForm/imagelf';\r\nimport FaceRecognition from './components/facerecog/facerecog';\r\nimport SignIn from './components/signin/signin';\r\nimport Register from './components/register/register';\r\nimport Particles from 'react-particles-js';\r\nimport './App.css';\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: 'feb00e0037664b6bb59d8bb7572c2e0c'\r\n });\r\n\r\nconst particlesOptions = {\r\n  \"particles\": {\r\n    \"number\": {\r\n      \"value\": 100,\r\n      \"density\": {\r\n        \"enable\": true,\r\n        \"value_area\": 800\r\n      }\r\n    },\r\n    \"color\": {\r\n      \"value\": \"#ffffff\"\r\n    },\r\n    \"shape\": {\r\n      \"type\": \"circle\",\r\n      \"stroke\": {\r\n        \"width\": 0,\r\n        \"color\": \"#000000\"\r\n      },\r\n      \"polygon\": {\r\n        \"nb_sides\": 5\r\n      },\r\n      \"image\": {\r\n        \"src\": \"img/github.svg\",\r\n        \"width\": 100,\r\n        \"height\": 100\r\n      }\r\n    },\r\n    \"opacity\": {\r\n      \"value\": 0.5,\r\n      \"random\": false,\r\n      \"anim\": {\r\n        \"enable\": false,\r\n        \"speed\": 1,\r\n        \"opacity_min\": 0.1,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"size\": {\r\n      \"value\": 3,\r\n      \"random\": true,\r\n      \"anim\": {\r\n        \"enable\": false,\r\n        \"speed\": 40,\r\n        \"size_min\": 0.1,\r\n        \"sync\": false\r\n      }\r\n    },\r\n    \"line_linked\": {\r\n      \"enable\": true,\r\n      \"distance\": 150,\r\n      \"color\": \"#ffffff\",\r\n      \"opacity\": 0.4,\r\n      \"width\": 1\r\n    },\r\n    \"move\": {\r\n      \"enable\": true,\r\n      \"speed\": 6,\r\n      \"direction\": \"none\",\r\n      \"random\": false,\r\n      \"straight\": false,\r\n      \"out_mode\": \"out\",\r\n      \"bounce\": false,\r\n      \"attract\": {\r\n        \"enable\": false,\r\n        \"rotateX\": 600,\r\n        \"rotateY\": 1200\r\n      }\r\n    }\r\n  },\r\n  \"interactivity\": {\r\n    \"detect_on\": \"canvas\",\r\n    \"events\": {\r\n      \"onhover\": {\r\n        \"enable\": true,\r\n        \"mode\": \"repulse\"\r\n      },\r\n      \"onclick\": {\r\n        \"enable\": true,\r\n        \"mode\": \"push\"\r\n      },\r\n      \"resize\": true\r\n    },\r\n    \"modes\": {\r\n      \"grab\": {\r\n        \"distance\": 400,\r\n        \"line_linked\": {\r\n          \"opacity\": 1\r\n        }\r\n      },\r\n      \"bubble\": {\r\n        \"distance\": 400,\r\n        \"size\": 40,\r\n        \"duration\": 2,\r\n        \"opacity\": 8,\r\n        \"speed\": 3\r\n      },\r\n      \"repulse\": {\r\n        \"distance\": 200,\r\n        \"duration\": 0.4\r\n      },\r\n      \"push\": {\r\n        \"particles_nb\": 4\r\n      },\r\n      \"remove\": {\r\n        \"particles_nb\": 2\r\n      }\r\n    }\r\n  },\r\n  \"retina_detect\": true\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: \"\",\r\n      imageURL: '',\r\n      box: {},\r\n      route: 'signin',\r\n      isSignedIn: false,\r\n    }\r\n  }\r\n\r\n  calculateFaceLocation = ( data ) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById( 'inputImage' );\r\n    const width = Number( image.width );\r\n    const height = Number( image.height );\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - ( clarifaiFace.right_col * width ),\r\n      bottomRow: height - ( clarifaiFace.bottom_row * height )\r\n    }\r\n  }\r\n\r\n  displayFaceBox = ( box ) => {\r\n    console.log( box );\r\n    this.setState( { box: box } );\r\n  }\r\n\r\n  onInputChange = ( event ) => {\r\n    this.setState( { input: event.target.value } );\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState( { imageURL: this.state.input } )\r\n    app.models\r\n    .predict( Clarifai.FACE_DETECT_MODEL, this.state.input )\r\n    .then( response => this.displayFaceBox( this.calculateFaceLocation( response ) ) )\r\n    .catch( err => console.log( err ) );\r\n  }\r\n\r\n  onRouteChange = ( route ) => {\r\n    if ( route === 'signout'){\r\n      this.setState( { isSignedIn: false } )\r\n    } else if ( route === 'home' ) {\r\n      this.setState( { isSignedIn: true } )\r\n    }\r\n    this.setState( { route: route } );\r\n  }\r\n\r\n  render() {\r\n    const { isSignedIn, imageURL, route, box } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className='particles' params={particlesOptions} />\r\n        <Navigation isSignedIn = { isSignedIn } onRouteChange = { this.onRouteChange } />\r\n        {\r\n          route === 'home'\r\n          ? <div> \r\n              <Logo />\r\n              <Rank />\r\n              <ImageLinkForm onInputChange={ this.onInputChange } onButtonSubmit={ this.onButtonSubmit } />\r\n              <FaceRecognition box={ box } imageURL={ imageURL } />\r\n            </div>\r\n          : (\r\n            route === 'signin' \r\n            ? <SignIn onRouteChange= { this.onRouteChange } /> \r\n            : <Register onRouteChange = { this.onRouteChange } />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}